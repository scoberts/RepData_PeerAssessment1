clear()
ToothGrowth
View(ToothGrowth)
data("ToothGrowth")
summary(cars)
data(ToothGrowth)
summary(ToothGrowth)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
View(post)
library(SDSFoundations)
install.packages("~/Downloads/SDSFoundations_1.1_R_x86_64-apple-darwin10.8.0.tar", repos = NULL)
install.packages("~/Downloads/SDSFoundations_1.1_R_x86_64-apple-darwin10.8.0.tar")
install.packages("~/Downloads/SDSFoundations_1.1_R_x86_64-apple-darwin10.8.0.tar", repos = NULL)
install.packages("~/Downloads/SDSFoundations_1.1_R_x86_64-apple-darwin10.8.0.tar")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
0
quit()
?rexp
randsamp <- rexp(n,lambda)
n <- 1000
lambda <- .2
mean <- 1/lambda
randsamp <- rexp(n,lambda)
View(randsamp)
?replicate
replicate(n,randsamp)
shaz <- replicate(n,randsamp)
mean(shaz)
1/lambda
sd(shaz)
shazsmall <- replicate(30,randsamp)
mean(shazsmall)
shazsmall <- replicate(3,randsamp)
mean(shazsmall)
hist(shaz)
hist(shazsmall)
hist(shaz)
vector <- 40
randsamp <- rexp(vector,lambda)
shaz <- replicate(n,randsamp)
shazsmall <- replicate(3,randsamp)
mean(shaz)
mean(shazsmall)
hist(shaz)
hist(shazsmall)
shazsmall <- replicate(30,randsamp)
hist(shazsmall)
n <- 1000
vector <- 40
yuge <- 100000
lambda <- .2
mean <- 1/lambda
randsamp <- rexp(vector,lambda)
randsamp2 <- rexp(yuge,lambda)
shaz <- replicate(n,randsamp)
shazsmall <- replicate(n,randsamp2)
mean(shaz)
mean(shazsmall)
hist(shaz)
hist(shazsmall)
randsamp <- mean(rexp(vector,lambda))
shaz <- replicate(n,randsamp)
mean(shaz)
hist(shaz)
mean(randsamp)
randsamp <- rexp(vector,lambda)
mean(randsamp)
shaz <- replicate(sim,randsamp)
sim <- 1000
shaz <- replicate(sim,randsamp)
mean(shaz)
hist(shaz)
shaz <- replicate(sim,mean(randsamp)
)
mean(shaz)
hist(shaz)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
?replicate
sim <- 1000
vector <- 40
yuge <- 100000
lambda <- .2
fortynum <- rexp(vector,lambda)
m = NULL
for (i in 1 : sim) m = c(m, mean(fortynum))
hist(m)
fortynum
mean(fortynum)
shaz <- replicate(sim,mean(fortynum))
mean(shaz)
hist(shaz)
shaz
sim <- 1000
vector <- 40
yuge <- 100000
lambda <- .2
fortynum <- rexp(vector,lambda)
fortynum
mean(fortynum)
m = NULL
for (i in 1 : sim) m = c(m, rexp(vector,lambda))
hist(m)
m
m = NULL
for (i in 1 : sim) m = c(m, mean(rexp(vector,lambda))
)
hist(m)
m
hist(m)
mean(m)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
g <- ggplot(randexp[,1])
plot(ToothGrowth$supp~ToothGrowth$dose)
lm(ToothGrowth$len~.)
lm(len~., ToothGrowth)
lm(len~factor(supp)+dose, ToothGrowth)
t.test(ToothGrowth$len ~ ToothGrowth$supp)
t.test(ToothGrowth$len ~ ToothGrowth$dose)
lm(len~factor(supp)+dose -1, ToothGrowth)
lm(len~factor(supp) -1, ToothGrowth)
lm(len~factor(supp), ToothGrowth)
w1 <- lm(len~factor(supp), ToothGrowth)
w1
w1$coefficients
w1$residuals
data(ToothGrowth)
#Basic Information about the Tooth Growth Data
summary(ToothGrowth)
####Plot of the two factors
w1 <- lm(len~factor(supp), ToothGrowth)
t.test(ToothGrowth$len ~ ToothGrowth$supp)
t.test(ToothGrowth$len ~ ToothGrowth$dose)
head(ToothGrowth)
t.test(ToothGrowth$len ~ factor(ToothGrowth$dose))
t.test(ToothGrowth$len ~ (ToothGrowth$dose))
t.test(ToothGrowth$len ~ .
)
t.test(ToothGrowth$len ~ .)
str(ToothGrowth)
str(ToothGrowth$dose)
summary(ToothGrowth$dose)
table(ToothGrowth$dose)
set.seed(567)
#The number of simulations
sim <- 1000
#Number of exponentials to generate
vector <- 40
lambda <- .2
#Generate 1000 simulations
randexp = NULL
for (i in 1 : sim) randexp = c(randexp, mean(rexp(vector,lambda)))
theorymean <- 1/lambda
theoryvar <- 1/(lambda*sqrt(vector))^2
#The theoretical mean of the 40 exponentials
theorymean
# The Sample Mean
mean(randexp)
# The Samle and the Theoretical Variance are also very similar.
theoryvar
var(randexp)
###Visually show the normal distribution
plot(randexp, xlab="Mean of the Exponentials", main ="Distribution of a Thousand Simulations")
abline(v=mean(randexp),lty = 2 )
qqnorm(randexp)
qqnorm(randexp, sim)
qqnorm(randexp, sim)
qqnorm(randexp, ylim=sim)
qqnorm(randexp)
qqnorm(as.vector(randexp))
qqnorm((randexp))
plot(randexp, xlab="Mean of the Exponentials", main ="Distribution of a Thousand Simulations")
abline(v=mean(randexp),lty = 2, col="blue")
hist(randexp, xlab="Mean of the Exponentials", main ="Distribution of a Thousand Simulations")
abline(v=mean(randexp),lty = 2, col="blue")
abline(v=mean(randexp), col="blue", wt=4)
abline(v=mean(randexp), col="red")
var1 <- rnorm(1000)
var1 <- rnorm(1000)
qqnorm(var1)
qqline(randexp)
qqnorm((randexp))
qqline(randexp)
data(ToothGrowth)
#Basic Information about the Tooth Growth Data
summary(ToothGrowth)
head(ToothGrowth)
table(ToothGrowth$dose)
####Plot of the two factors
w1 <- lm(len~factor(supp), ToothGrowth)
t.test(ToothGrowth$len ~ ToothGrowth$supp)
lm(len~factor(supp), ToothGrowth)
boxplot(lm(len~factor(supp), ToothGrowth))
d1 <- subset(ToothGrowth, dose = ".5")
t.test(d1$len ~ ToothGrowth$supp)
t.test(d1$len ~ d1$supp)
d2 <- subset(ToothGrowth, dose = "1.0")
d2
t.test(d2$len ~ d2$supp)
t.test(d2$len,d2$supp)
t.test(d2$len,d2$supp, paired=TRUE)
t.test(d2$len,d2$supp, paired=TRUE, var.equal = FALSE)
t.test(len,supp, paired=TRUE, var.equal = FALSE, data = d2)
d2
d2 <- subset(ToothGrowth, dose = "1.0")
t.test(len,supp, paired=TRUE, var.equal = FALSE, data = d2)
d2
d2 <- subset(ToothGrowth, dose = 1.0)
t.test(len,supp, paired=TRUE, var.equal = FALSE, data = d2)
d2
d2 <- subset(ToothGrowth, dose == 1.0)
t.test(len,supp, paired=TRUE, var.equal = FALSE, data = d2)
d2
t.test(len,supp, data = d2)
t.test(d2$len,d2$supp, data = d2)
t.test(d2$len,d2$supp, paired=TRUE, data = d2)
t.test(d2$len ~d2$supp, paired=TRUE, data = d2)
d2 <- subset(ToothGrowth, dose == "1.0"")
d2 <- subset(ToothGrowth, dose == "1.0")
d2 <- subset(ToothGrowth, dose == 1.0)
t.test(d2$len ~d2$supp, paired=TRUE, data = d2)
d2
t.test(d2$len ~d2$supp, paired=TRUE, data = d2)
d1 <- subset(ToothGrowth, dose == .5)
t.test(d1$len ~ d1$supp)
d2 <- subset(ToothGrowth, dose == 1.0)
t.test(d2$len ~d2$supp, paired=TRUE, data = d2)
t.test(d2$len, d2$supp, paired=TRUE, data = d2)
t.test(d2$len ~ d2$supp, paired=FALSE, data = d2)
d1 <- subset(ToothGrowth, dose == .5)
t.test(d1$len ~ d1$supp)
d2 <- subset(ToothGrowth, dose == 1.0)
t.test(d2$len ~ d2$supp, paired=FALSE, data = d2)
d3 <- subset(ToothGrowth, dose == 2.0)
t.test(d3$len ~d3$supp, paired=TRUE, data = d3)
t.test(d1$len ~ d1$supp, paired=FALSE)
t.test(d3$len ~d3$supp, paired=FALSE, data = d3)
d1 <- subset(ToothGrowth, supp == "VC")
t.test(d1$len ~ d1$dose, paired=FALSE)
t.test(d1$len ~ d1$dose)
t.test(d1$len, d1$dose)
t.test(d1$len, factor(d1$dose)
)
t.test(d1$len, d1$dose)
d2 <- subset(ToothGrowth, supp == "OJ")
t.test(d2$len ~ d2$dose, paired=FALSE, data = d2)
t.test(d2$len ~ d2$dose, data = d2)
t.test(d2$len, d2$dose, data = d2)
t.test(d1$len ~d1$dose)
lm(len~factor(supp), ToothGrowth)
lm(len~factor(supp)-1, ToothGrowth)
qplot(dose, len, data=ToothGrowth, color=supp)
library(ggplot2)
data(ToothGrowth)
#Basic Information about the Tooth Growth Data
summary(ToothGrowth)
#
head(ToothGrowth)
#
table(ToothGrowth$dose)
####Plot of the two factors
lm(len~factor(supp)-1, ToothGrowth)
qplot(dose, len, data=ToothGrowth, color=supp)
VC <- subset(ToothGrowth, supp == "VC")
t.test(len~ dose,paired=FALSE, data=VC)
d2 <- subset(ToothGrowth, supp == "OJ")
t.test(d2$len, d2$dose, data = d2)
d2
d3 <- subset(ToothGrowth, dose == 2.0)
t.test(d3$len ~d3$supp, paired=FALSE, data = d3)
qplot(dose, len, data=ToothGrowth, color=supp)
t.test(len~ dose,paired=FALSE, var.equal=FALSE, data=VC)
VC <- subset(ToothGrowth, supp == "VC")
t.test(len~ dose,paired=FALSE, var.equal=FALSE, data=VC)
t.test(len, dose,paired=FALSE, var.equal=FALSE, data=VC)
VC <- subset(ToothGrowth, supp == "VC")
VC
d2 <- subset(ToothGrowth, supp == "OJ")
t.test(d2$len, d2$dose, data = d2)
t.test(d2$len, d2$dose, var.equal=FALSE, data = d2)
d2 <- subset(ToothGrowth, supp == "OJ")
t.test(d2$len, d2$dose, var.equal=FALSE, data = d2)
VC <- subset(ToothGrowth, supp == "VC")
t.test(len, dose,paired=FALSE, var.equal=FALSE, data=VC)
t.test(VC$len, VC$dose,paired=FALSE, var.equal=FALSE, data=VC)
t.test(VC$len ~VC$dose,paired=FALSE, var.equal=FALSE, data=VC)
t.test(VC$len ~VC$dose, var.equal=FALSE, data=VC)
t.test(VC$dose,VC$len,paired=FALSE, var.equal=FALSE, data=VC)
OJ <- subset(ToothGrowth, supp == "OJ")
t.test( OJ$dose, OJ$len, var.equal=FALSE, data = OJ)
VC <- subset(ToothGrowth, supp == "VC")
t.test(VC$dose,VC$len,paired=FALSE, var.equal=FALSE, data=VC)
t.test(VC$len~VC$dose, var.equal=FALSE, data=VC)
t.test(VC$len~VC$dose, data=VC)
t.test(len~dose, data=VC)
t.test(len ~ dose, data=VC)
qplot(dose, len, data=ToothGrowth, color=supp, facets=supp)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp)
qplot(dose, len, data=ToothGrowth, facets=.~supp)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp)
qplot(dose, mean(len), data=ToothGrowth, color=supp, facets=.~supp)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
qplot(price,data=diamonds,binwidth=18497/30, fill=cut)
qplot(price, data=diamonds,geom="density")
qplot(price, data=diamonds,geom="density",color=cut)
qplot(carat,price, data=diamonds, shape=cut)
qplot(carat,price, data=diamonds, color=cut)
g<- ggplot(data=diamonds, aes(depth,price))
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds, aes(carat,price)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, facets= .~drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy, data=mpg, color=drv)
qplot(drv, hwy, data=mpg, geom= "boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ,hwy, data=mpg, facets= .~drv)
qplot(hwy, data=mpg, facets= drv~., binwidth=2)
qplot(displ,hwy, data=mpg, geom=c("point","smooth"), facets= .~drv)
g<- ggplot(data=mpg, aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth"))
?ToothGrowth
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
VC <- subset(ToothGrowth, supp == "VC")
t.test(len ~ dose, data=VC)
VC
OJ <- subset(ToothGrowth, supp == "OJ")
t.test( OJ$dose, OJ$len, var.equal=FALSE, data = OJ)
t.test( OJ$len ~OJ$dose, var.equal=FALSE, data = OJ)
t.test( OJ$len ~OJ$dose, data = OJ)
t.test(
t.test(OJ$len ~ OJ$dose, data = OJ)
VC <- subset(ToothGrowth, supp == "VC")
t.test(len ~ dose, data=VC)
t.test(len ~ dose, data= VC)
t.test(len ~ dose, data = VC)
t.test(VC$len ~ VC$dose, data = VC)
t.test(len ~ dose, data = ToothGrowth)
library(ggplot2)
data(ToothGrowth)
#Basic Information about the Tooth Growth Data
summary(ToothGrowth)
#
head(ToothGrowth)
#
table(ToothGrowth$dose)
####Plot of the two factors
lm(len~factor(supp)-1, ToothGrowth)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth"))
###Split out the data into Supplement Type
#Vitamin C ascorbic acid
#VC <- subset(ToothGrowth, supp == "VC")
t.test(len ~ dose, data = ToothGrowth)
##Orange Juice
OJ <- subset(ToothGrowth, supp == "OJ")
t.test(OJ$len ~ OJ$dose, data = OJ)
t.test(len ~ dose, data = ToothGrowth)
t.test(len ~ dose , data = ToothGrowth)
t.test(dose , len,data = ToothGrowth)
t.test(dose , len, data = ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
qplot(dose, len, data=ToothGrowth, color=dose, facets=.~dose, geom=c("point","smooth"))
qplot(dose, len, data=ToothGrowth, color=dose, facets=supp,dose, geom=c("point","smooth"))
qplot(dose, len, data=ToothGrowth, color=dose, facets=.~dose, geom=c("point","smooth"))
qplot(dose, len, data=ToothGrowth, color=dose, facets=.~dose)
t.test(len ~ supp, data = ToothGrowth)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom="smooth")
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom="boxplot")
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp)
d1 <- subset(ToothGrowth, dose == .5)
##Subset the data by dosage
d1 <- subset(ToothGrowth, dose == .5)
d2 <- subset(ToothGrowth, dose == 1.0)
d3 <- subset(ToothGrowth, dose == 2.0)
t.test(d1,d2)
##Subset the data by dosage
d1 <- subset(ToothGrowth, dose == .5)
d2 <- subset(ToothGrowth, dose == 1.0)
d3 <- subset(ToothGrowth, dose == 2.0)
t.test(d1,d2)
t.test(len ~supp, data = d1)
t.test(len ~supp, var.test=FALSE, data = d1)
t.test(len ~supp, var.equal =FALSE, data = d1)
t.test(len ~ supp, data = ToothGrowth)
t.test(len ~supp, var.equal = FALSE, data = d1)
t.test(len ~supp, var.equal = FALSE, data = d1)
d1 <- subset(ToothGrowth, dose == .5)
d2 <- subset(ToothGrowth, dose == 1.0)
d3 <- subset(ToothGrowth, dose == 2.0)
##With Doasage of .5
t.test(len ~supp, var.equal = FALSE, data = d1)
##With Doasage of 1.0
t.test(len ~supp, var.equal = FALSE, data = d2)
##With Doasage of 2.0
t.test(len ~supp, var.equal = FALSE, data = d3)
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom="point")
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom="smooth")
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=("point","smooth"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","line"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","abline"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","line"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth(linetype)"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth(linetype)"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("point","smooth","line"))
warnings()
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("auto"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("auto","line"))
qplot(dose, len, data=ToothGrowth, color=supp, facets=.~supp, geom=c("auto"))
t.test(len ~supp, var.equal = FALSE, data = d3)
?ToothGrowth
install.packages("ProjectTemplate")
library("ProjectTemplate", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
## Loading and preprocessing the data
hactivity <- read.csv("~/Documents/workspace/RepData_PeerAssessment1/activity.csv")
setwd("~/Documents/workspace/JHUML1")
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv")
setwd("~/Documents/workspace/RepData_PeerAssessment1")
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv")
activity <- read.csv("~/Documents/workspace/RepData_PeerAssessment1/activity.csv")
View(activity)
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv")
read.csv("activity")
read.csv("~/activity")
getwd
getwd()
read.csv("activity")
read.csv("activity.csv")
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv")
## Loading and preprocessing the data
read.csv("activity.csv")
?read.csv
## Loading and preprocessing the data
read.csv("activity.csv",header=TRUE)
## Loading and preprocessing the data
hactivity<- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv", header=TRUE)
hactivity
head()hactivity
head(hactivity)
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
Sys.getlocale()
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
Sys.getlocale()
install.packages("curl")
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
Sys.setlocale('LC_ALL','C')
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
hactivity <- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
read.csv("activity.csv", header=TRUE)
hactivity <- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
d <- read.csv("activity.csv", header=TRUE)
hactivity <- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
d <- read.csv("activity.csv", header=TRUE)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
rm(list=ls())
Sys.getlocale()
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
## Loading and preprocessing the data
d <- read.csv("activity.csv", header=TRUE)
## Loading and preprocessing the data
d <- read.csv("activity.csv", header=TRUE)
activity <- read.csv("~/Documents/workspace/RepData_PeerAssessment1/activity.csv", encoding="UTF-8")
View(activity)
## Loading and preprocessing the data
d <- read.csv("activity.csv", header=TRUE, encoding="UTF-8")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
activity <- read.csv("activity.csv", header=TRUE, encoding="UTF-8")
## Loading and preprocessing the data
activity <- read.csv("activity.csv", header=TRUE, encoding="UTF-8")
## Loading and preprocessing the data
activity <- read.csv("activity.csv", header=TRUE, encoding="UTF-8")
## Loading and preprocessing the data
activity <- as.dataframe(read.csv("activity.csv", header=TRUE, encoding="UTF-8"))
